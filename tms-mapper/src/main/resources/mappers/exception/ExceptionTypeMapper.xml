<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnet.tms.mapper.ExceptionTypeMapper">
    <resultMap id="BaseResultMap" type="com.lnet.model.tms.exception.exceptionEntity.ExceptionType">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="CODE" property="code" jdbcType="VARCHAR"/>
        <result column="NAME" property="name" jdbcType="NVARCHAR"/>
        <result column="REMARK" property="remark" jdbcType="NVARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID, CODE, NAME, REMARK
    </sql>

    <insert id="insert" parameterType="com.lnet.model.tms.exception.exceptionEntity.ExceptionType">
        INSERT INTO EXCEPTION_TYPE(<include refid="Base_Column_List"/>) VALUES
        (
        #{id,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR},
        #{name,jdbcType=NVARCHAR},
        #{remark,jdbcType=NVARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.lnet.model.tms.exception.exceptionEntity.ExceptionType">
        UPDATE EXCEPTION_TYPE SET
        NAME = #{name,jdbcType=VARCHAR},
        REMARK = #{remark,jdbcType=NVARCHAR}
        WHERE CODE = #{code,jdbcType=VARCHAR}
    </update>

    <select id="exists" parameterType="string" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM EXCEPTION_TYPE WHERE CODE = #{code,jdbcType=VARCHAR}
    </select>

    <select id="get" parameterType="string" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM EXCEPTION_TYPE WHERE ID = #{id,jdbcType=VARCHAR}
    </select>

    <select id="getByCode" parameterType="string" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM EXCEPTION_TYPE WHERE CODE = #{code,jdbcType=VARCHAR}
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM EXCEPTION_TYPE
    </select>

    <select id="search" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM EXCEPTION_TYPE
        <where>
            <if test="code != null">
                CODE LIKE CONCAT('%', CONCAT(#{code,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="name != null">
                AND NAME LIKE CONCAT('%', CONCAT(#{name,jdbcType=VARCHAR}, '%'))
            </if>
        </where>
    </select>
</mapper>